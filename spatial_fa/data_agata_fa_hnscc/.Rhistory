library(STRINGdb)
# ----  Directorio de trabajo ----
setwd("./")
getwd()
list.files()
# Especifica el organismo;
# (9606 = Homo sapiens); versión de la base de datos y score mínimo
string_db <- STRINGdb$new(
version = "12",           # Última versión estable
species = 9606,           # Homo sapiens
score_threshold = 700,    # Score de confianza (400 es medio; puedes usar 700 para alto)
input_directory = ""
)
# Listado de genes
genes <- read.table("FA_SCC_filtered_up_genes.csv",
header=TRUE, stringsAsFactors=FALSE, SEP = ",")
# Listado de genes
genes <- read.table("FA_SCC_filtered_up_genes.csv",
header=TRUE, stringsAsFactors=FALSE, sep = ",")
head(genes)
mapped_genes <- string_db$map(genes, "gene_symbol", removeUnmappedRows = TRUE)
# Esto abre la red en el navegador
string_db$plot_network(mapped_genes$STRING_id)
# Obtener interacciones entre tus genes
interactions <- string_db$get_interactions(mapped_genes$STRING_id)
View(interactions)
head(interactions)
# Paso previo a limpiar direccionalidad: eliminar duplicados exactos
interacciones <- unique(interactions)
# Ordenar los nodos para que A-B y B-A sean tratados igual
interacciones$node1_clean <- pmin(interacciones$from, interacciones$to)
interacciones$node2_clean <- pmax(interacciones$from, interacciones$to)
# Eliminar duplicados (B-A si ya existe A-B)
interacciones_nodir <- interacciones[!duplicated(interacciones[c("node1_clean", "node2_clean")]), ]
# Guardar solo las columnas necesarias
interacciones_final <- interacciones_nodir[, c("node1_clean", "node2_clean", "combined_score")]
colnames(interacciones_final) <- c("from", "to", "combined_score")
# Usar mapping inverso de STRING ID a símbolo de gen
genes_mapeados <- mapped_genes[, c("gene_name", "STRING_id")]
colnames(mapped_genes)
# Usar mapping inverso de STRING ID a símbolo de gen
genes_mapeados <- mapped_genes[, c("gene_symbol", "STRING_id")]
colnames(genes_mapeados) <- c("symbol", "STRING_id")
head(genes_mapeados)
# Hacer el merge para tener los nombres legibles
interacciones_final_named <- merge(interacciones_final, genes_mapeados, by.x="from", by.y="STRING_id")
interacciones_final_named <- merge(interacciones_final_named, genes_mapeados, by.x="to", by.y="STRING_id")
# Seleccionar columnas y renombrar
interacciones_final_named <- interacciones_final_named[, c("symbol.x", "symbol.y", "combined_score")]
colnames(interacciones_final_named) <- c("from", "to", "combined_score")
# Exportar
head(interacciones_final_named)
colnames(interacciones_final_named) <- c("#node1", "node2", "combined_score")
head(interacciones_final_named)
write.table(interacciones_final_named, "string_interactions_short.tsv", sep = "\t", quote = FALSE, row.names = FALSE)
View(interacciones_final_named)
